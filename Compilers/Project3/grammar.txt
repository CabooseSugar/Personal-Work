program -> decl_list
decl_list -> decl_list' 
decl_list' -> fun_decl decl_list' | ϵ 
type_spec -> "int" type_spec' | "bool" type_spec'
type_spec' -> "[" "]" type_spec' | ϵ
fun_decl -> type_spec IDENT "(" params ")" compound_stmt
params -> param_list | ϵ
param_list -> param param_list'
param_list' -> "," param param_list' | ϵ
param -> type_spec IDENT
stmt_list -> stmt_list'
stmt_list' -> stmt stmt_list' | ϵ
stmt -> expr_stmt ";" | compound_stmt | if_stmt | while_stmt | SEMI
expr_stmt -> IDENT "=" expr
while_stmt -> "while" "(" expr ")" stmt
compound_stmt -> "{" local_decls stmt_list "}"
local_decls -> local_decls'
local_decls' -> local_decl local_decls' | ϵ
local_decl -> type_spec IDENT ";"
if_stmt -> "if" "(" expr ")" stmt "else" stmt
arg_list -> expr arg_list'
arg_list' -> "," expr arg_list' | ϵ
args -> expr arg_list' | ϵ
expr -> term expr'
expr' -> EXPROP term expr' | RELOP term expr' | ϵ
term -> factor term'
term' -> TERMOP factor term' | ϵ
factor -> IDENT factor' | "(" expr ")" | INT_LIT | BOOL_LIT
factor' -> "(" args ")" | "[" expr "]" | ϵ



