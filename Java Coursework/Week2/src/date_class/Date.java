package date_class;

public class Date {

    public static void main(String[] args) {
        Date date = new Date( 8, 27, 2018); // can put this here, before initializing and defining parts of the
                                                        // class, or in Date_Test.java. DON'T try to put the month: and d:
                                                        // parts. They're auto-generated by the IDE.

        date.printDate();

    }

    //
    // Instance data - notice purple coloring
    private int month; // doesn't default to private like C++, but 'package'
    private int day;
    private int year;

    //
    // Class constructors
    public Date() { // default constructor

    }

    public Date(int month, int d, int y) { // constructor
        this.month = month; // the point of this is just to point out that this. operator can deal with identical
        // names between instance data and variables passed to the method
        day = d;
        year = y;
    }

    //
    // GET/SET or Accessor/Mutator methods
    public int getMonth() { // normally you'd have getMonth() const, but Java can handle the const itself
        return month;
    }

    public int getDay() {
        return day;
    }

    public int getYear() {
        return year;
    }

    public void setMonth(int m) {
        month = m;
    }

    public void setDay(int d) {
        day = d;
    }

    public void setYear(int y) {
        year = y;
    }

    //
    // Other methods
    public void printDate() {
        System.out.format("%s/%s/%s\n", month, day, year); //%s (string) is easier than doing (month + "/" + day + "/" ... etc)
    }

    //
    // EQUALS method

    /*
    @Override
    public boolean equals(Object other) {
        if (!(other instanceof Date)) {
            throw new RuntimeException("Other is not an instance of date");
        }
    }
    */

    public boolean equals(Date other) {
        return (
                month == other.month
                && day == other.day
                && year == other.year
                );
    }

    /*
    @Override           // forces java to use your version of toString over its own
    public String toString() {
        public void printDate();
    }
    */

    // Java can't do destructors
}